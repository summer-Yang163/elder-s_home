<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elder.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.elder.domain.User" >
    <id column="User_Id" property="userId" jdbcType="INTEGER" />
    <result column="Type_Id" property="typeId" jdbcType="INTEGER" />
    <result column="User_Name" property="userName" jdbcType="VARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="Is_Hide" property="isHide" jdbcType="INTEGER" />
    <result column="User_Details_Id" property="userDetailsId" jdbcType="INTEGER" />
    <result column="Service_Person_Id" property="servicePersonId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    User_Id, Type_Id, User_Name, Password, Is_Hide, User_Details_Id, Service_Person_Id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where User_Id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where User_Id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.elder.domain.User" useGeneratedKeys="true" keyProperty="userId">
    insert into user (User_Id, Type_Id, User_Name, 
      Password, Is_Hide, User_Details_Id,
      Service_Person_Id)
    values (#{userId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{isHide,jdbcType=INTEGER}, #{userDetailsId,jdbcType=INTEGER},
      #{servicePersonId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.elder.domain.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        User_Id,
      </if>
      <if test="typeId != null" >
        Type_Id,
      </if>
      <if test="userName != null" >
        User_Name,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="isHide != null" >
        Is_Hide,
      </if>
      <if test="userDetailsId != null" >
        User_Details_Id,
      </if>
      <if test="servicePersonId != null" >
        Service_Person_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isHide != null" >
        #{isHide,jdbcType=INTEGER},
      </if>
      <if test="userDetailsId != null" >
        #{userDetailsId,jdbcType=INTEGER},
      </if>
      <if test="servicePersonId != null" >
        #{servicePersonId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.elder.domain.User" >
    update user
    <set >
      <if test="typeId != null" >
        Type_Id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        User_Name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isHide != null" >
        Is_Hide = #{isHide,jdbcType=INTEGER},
      </if>
      <if test="userDetailsId != null" >
        User_Details_Id = #{userDetailsId,jdbcType=INTEGER},
      </if>
      <if test="servicePersonId != null" >
        Service_Person_Id = #{servicePersonId,jdbcType=INTEGER},
      </if>
    </set>
    where User_Id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elder.domain.User" >
    update user
    set Type_Id = #{typeId,jdbcType=INTEGER},
      User_Name = #{userName,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Is_Hide = #{isHide,jdbcType=INTEGER},
      User_Details_Id = #{userDetailsId,jdbcType=INTEGER},
      Service_Person_Id = #{servicePersonId,jdbcType=INTEGER}
    where User_Id = #{userId,jdbcType=INTEGER}
  </update>

  <!--增加的业务逻辑语句-->
  <select id="validateUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from user where User_Name=#{userName,jdbcType=VARCHAR }
  </select>
  <insert id="registerUser">
    insert into user (User_Name,Password,Type_Id) VALUES (#{userName,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{typeId,jdbcType=INTEGER})
  </insert>
  <select id="userLogin" resultMap="BaseResultMap">
    select * from user  where User_Name=#{userName,jdbcType=VARCHAR} and Password=#{password,jdbcType=VARCHAR}
  </select>
  <select id="executeQueryAllByPage" resultMap="BaseResultMap" >
    select * from user where Is_Hide=#{isHide,jdbcType=INTEGER} limit #{currentTotalCount},#{pageSize}
  </select>
  <select id="queryTotalRows" resultType="java.lang.Integer">
    select count(*) from user where Is_Hide=#{isHide,jdbcType=INTEGER};
  </select>

</mapper>
